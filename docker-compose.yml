version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: redbus_database
    environment:
      POSTGRES_DB: redbus_db
      POSTGRES_USER: redbus_user
      POSTGRES_PASSWORD: redbus_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - redbus_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U redbus_user -d redbus_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Combined FastAPI Backend + React Frontend
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: redbus_app
    environment:
      DATABASE_URL: postgresql://redbus_user:redbus_password@database:5432/redbus_db
      JWT_SECRET_KEY: your-super-secret-jwt-key-change-in-production
      ENVIRONMENT: production
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - redbus_network
    restart: unless-stopped
    volumes:
      - ./backend/app.log:/app/app.log
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/cities"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis (Optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: redbus_redis
    ports:
      - "6379:6379"
    networks:
      - redbus_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  redbus_network:
    driver: bridge
